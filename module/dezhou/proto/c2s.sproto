.package {
	type 0 : integer
	session 1 : integer
    index 2 : integer
    version 3 : integer
}

.settlement {
    uid 0 : integer
	gold 1 : integer	
}

.card {
    pos   0 : integer
    value 1 : integer
}

# 麻将玩家信息，在重新链接的时候
.player {
    idx          0 : integer
    chip         1 : integer
    sex          3 : integer
    name         4 : string
    state        5 : integer
    last_state   6 : integer
    que          7 : integer
    takecardsidx 8 : integer
    takecardscnt 9 : integer
    takecardslen 10 : integer
    takecards    11 : *card
    cards        12 : *card
    leadcards    13 : *card
    putcards     14 : *card
    putidx       15 : integer  # 无用
    hold_card    16 : card
    hucards      17 : *card
}

.mail {
    id       0 : integer
    from     1 : integer
    to       2 : integer
    title    3 : string
    content  4 : string
    viewed   5 : integer
    datetime 6 : integer
}

.outbox {
    all 0 : mail
}

.opinfo {
    idx       0 : integer
    opcode    1 : integer
}

.crsc {
    hujiaozhuanyi 0 : integer
    zimo          1 : integer
    dianganghua   2 : integer
    daiyaojiu     3 : integer
    duanyaojiu    4 : integer
    jiangdui      5 : integer
    tiandihu      6 : integer
    top           7 : integer
}

.crsx {
    huqidui       0 : integer
    qingyise      1 : integer
}

.record {
    id            0 : integer
    datetime      1 : integer
    player1       2 : string
    player2       3 : string
    player3       4 : string
    player4       5 : string
}

.rule {
    id 0 : integer
}

####################################### 
# big2 类
.big2rule {
    multi 0 : integer
}

.big2lead {
    leadtype 0 : integer
    cards 1 : *card
}

.big2player {
    idx 0 : integer
    chip 1 : integer
    sex 2 : integer
    name 3 : string
    state 4 : string
    online 5 : boolean
    cards 6 : *card         # 手上的牌
    opcode 7 : integer
    lead 8 : big2lead
}

.big2playerdeal {
    idx 0 : integer
    cards 1 : *card
}
# big2 类
####################################### 

####################################### 
# poker

.pokerplayer {
    idx 0 : integer
    chip 1 : integer
    sex 2 : integer
    name 3 : string
    state 4 : string
    online 5 : boolean
    cards 6 : *card         # 手上的牌
    opcode 7 : integer
    lead 8 : big2lead
}

.perflop_card {
    idx 0 : integer
    cards 1 : *card
}

.pokerrule {
}


# poker
####################################### 

####################################### 
# 基础模块
handshake 1 {
    response {
    	errorcode 0 : integer
    }
}

logout 2 {
    response {
        errorcode 0 : integer
    }
}

inituser 3 {
    response {
        errorcode 0 : integer
    }
}


####################################### 
# 系统模块
# 第一条消息，主要是一个写个人信息
first 104 {
    response {
        errorcode 0 : integer
        name      1 : string
        nameid    2 : string
        rcard     3 : integer
        board     4 : string
        adver     5 : string
        msgnum    6 : integer
        sex       7 : integer
    }
}

checkindaily 105 {
    response {
        errorcode 0 : integer
    }
}

board 106 {
    response {
        errorcode 0 : integer
        text      1 : string
    }
}

adver 107 {
    response {
        errorcode 0 : integer
        text      1 : string
    }
}

fetchinbox 108 {
    request {
        fromdate  0 : integer
    }
    response {
        errorcode 0 : integer
        list      1 : *mail
    }
}

syncsysmail 109 {
    request {
        all       0 : *integer
    }
    response {
        errorcode 0 : integer
        inbox     1 : *mail
    }
}

viewedmail 110 {
    request {
        mailid    0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

records 111 {
    response {
        errorcode 0 : integer
        records   1 : *record
    }
}

record 112 {
    request {
        id 0 : integer
    }
    response {
        errorcode 0 : integer
        r         1 : string
    }
}

avatar 113 {
    response {
        errorcode 0 : integer
        nickname 1 : string
        nameid 2 : string
        rcard 3 : integer
    }
}

room_info 114 {
    response {
        errorcode 0 : integer
        isCreated 1 : boolean
        joined    2 : boolean
        roomid    3 : integer
    }
}

####################################### 
# 麻将协议 [500, 600)
call 501 {
    request {
        op        0 : opinfo
    }
    response {
        errorcode 0 : integer
    }
}

# shuffle 502 {
#     request {
#         idx       0 : integer
#     }
#     response {
#         errorcode 0 : integer
#     }
# }

# dice 503 {
#     request {
#         idx       0 : integer
#     }
#     response {
#         errorcode 0 : integer
#         d1        1 : integer
#         d2        2 : integer
#     }
# }

lead 504 {
    request {
        idx       0 : integer
        card      1 : integer
        isHoldcard 2 : boolean
    } 
    response {
        errorcode 0 : integer
    }
}

step 505 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

restart 506 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

# rchat 507 {
#     request {
#         idx       0 : integer
#         type      1 : integer
#         textid    2 : integer
#         sdsteam   3 : string
#     }
#     response {
#         errorcode 0 : integer
#     }
# }

xuanpao 508 {
    request {
        idx       0 : integer
        fen       1 : integer
    }
    response {
        errorcode 0 : integer
    }
}

xuanque 509 {
    request {
        idx       0 : integer
        que        1 : integer
    }
    response {
        errorcode 0 : integer
    }
}

ready 510 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
        idx 1 : integer
    }
}

create 511 {
    request {
        provice    0 : integer
        ju         1 : integer
        overtype   2 : integer
        sc         3 : crsc
        sx         4 : crsx
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
    }
}

join 512 {
    request {
        roomid 0 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        me        3 : player
        rule      4 : rule
        ps        5 : *player
    }
}

rejoin 513 {
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        me        3 : player
        rule      4 : rule
        ps        5 : *player
    }
}

leave 514 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

####################################### 
# 大佬2协议 [600, 700)
#大佬2决定
big2call 600 {
    request {
        idx       0 : integer
        opcode    1 : integer
        lead      2 : big2lead
    }
    response {
        errorcode 0 : integer
    }
}

# 大佬2出牌 (deprecated)
# big2lead 601 {
#     request {
#         idx        0 : integer
#         lead      2 : big2lead
#     } 
#     response {
#         errorcode 0 : integer
#     }
# }

# 确认四个玩家都呈现完毕后，状态转移
big2step 602 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

big2restart 603 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

big2ready 604 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
        idx 1 : integer
    }
}

big2match 605 {
    request {
        rule 0 : integer
        mode 1 : integer
        scene 2 : integer
    }
    response {
        errorcode 0 : integer
    }
}

big2create 606 {
    request {
        provice    0 : integer
        ju         1 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
    }
}

big2join 607 {
    request {
        roomid 0 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        state     3 : string
        rule      4 : big2rule
        me        5 : big2player
        ps        6 : *big2player
    }
}

big2rejoin 608 {
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        state     3 : string
        rule      4 : big2rule
        me        5 : big2player
        ps        6 : *big2player
    }
}

big2leave 609 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

####################################### 
# 聊天协议 [700, 720)
rchat 700 {
    request {
        idx       0 : integer
        type      1 : integer
        textid    2 : integer
        sdsteam   3 : string
    }
    response {
        errorcode 0 : integer
    }
}

####################################### 
# 德州协议 [720, 800)
pokercall 720 {
    request {
        idx       0 : integer
        opcode    1 : integer
        coin      2 : integer
    }
    response {
        errorcode 0 : integer
    }
}

# 确认四个玩家都呈现完毕后，状态转移
pokerstep 721 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

pokerrestart 722 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

pokerready 723 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
        idx 1 : integer
    }
}

pokermatch 724 {
    request {
        mode 0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

pokercreate 725 {
    request {
        provice    0 : integer
        ju         1 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
    }
}

pokerjoin 726 {
    request {
        roomid 0 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        state     3 : string
        rule      4 : pokerrule
        me        5 : pokerplayer
        ps        6 : *pokerplayer
    }
}

pokerrejoin 727 {
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        state     3 : string
        rule      4 : pokerrule
        me        5 : pokerplayer
        ps        6 : *pokerplayer
    }
}

pokerleave 728 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

# 德州协议 [720, 800)
####################################### 
